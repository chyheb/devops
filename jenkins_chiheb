pipeline{

      agent any
        tools {
     jdk 'JAVA_HOME'
     maven 'M2_HOME'

  }
  environment {

        DOCKERHUB_CREDENTIALS = credentials('DockerHubID')


        stages{

            stage('Cleaning the project') {
                 steps{
                    sh "mvn -B -DskipTests clean  "
                    }
                }


	        stage('Build') {
      		    steps {
        		sh 'mvn -B -DskipTests clean package'
      		          }
            	}
            stage('JUnit/Mockito'){
                steps {
		script{
                sh '''mvn -version
                mvn -B -DskipTests clean package'''

                echo """Bravo! tous les tests sont pris en charge"""
                }}
            }
            stage("SonarQube Analysis") {
                       steps {

                         withSonarQubeEnv('sonar') {
                           sh 'mvn clean -DskipTests package sonar:sonar'
                         }
                       }
                     }
            stage('Upload War To Nexus'){
                steps{
                    nexusArtifactUploader artifacts: [
                            [
                            artifactId: 'achat',
                            classifier: '',
			    file: 'pom.xml',
                            type: 'pom'
                            ]
                    ],
                     credentialsId: 'nexus3',
                        groupId: 'tn.esprit.rh',
                        nexusUrl: '192.168.33.10:8081',
                        nexusVersion: 'nexus3',
                        protocol: 'http',
                        repository: 'simpleapp-release',
                        version: 'pom.1.0'
                }
            }
	     stage('Build docker image'){
                             steps{
                                 script{
                                    sh 'docker build -t $DOCKERHUB_CREDENTIALS_USR/springprojet .'
                                 }
                             }
                         }
	     stage('Docker login') {

                                         steps {
                                          sh 'echo "login Docker ...."'
                   	sh 'docker login -u $DOCKERHUB_CREDENTIALS_USR -p $DOCKERHUB_CREDENTIALS_PSW'
                               }  }
		 stage('Docker push') {

                 steps {
                      sh 'echo "Docker is pushing ...."'
                     	sh 'docker push $DOCKERHUB_CREDENTIALS_USR/springprojet'
                        }  }
         stage('Docker compose') {

                          steps {
                               sh 'docker-compose up -d'
                                 }  }
        }
}
