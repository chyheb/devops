pipeline{

      agent any
        tools {
     jdk 'JAVA_HOME'
     maven 'M2_HOME'

  }
  environment {

        DOCKERHUB_CREDENTIALS = credentials('DockerHubID')


        stages{
			stage('GIT Checkout') {
				steps {
                echo 'Pulling code from Git'
                git branch: 'main', 
                url: 'https://github.com/chyheb/devops'
				}
			}

             stage('Building JAR') {
            steps {
                echo 'Building with Maven'
                sh 'mvn clean install -DskipTests'
				}
			}
            stage('JUnit/Mockito'){
                steps {
                echo 'Testing Facture Services'
                sh 'mvn test'
            }
            }
            stage("SonarQube") {
                       steps {
						echo 'SonarQube'
                         withSonarQubeEnv('sonar') {
                           sh 'mvn clean -DskipTests package sonar:sonar'
                         }
                       }
                     }
            stage('Upload War To Nexus'){
                steps{
                    nexusArtifactUploader artifacts: [
                            [
                            artifactId: 'achat',
                            classifier: '',
			    file: 'pom.xml',
                            type: 'pom'
                            ]
                    ],
                     credentialsId: 'nexus3',
                        groupId: 'tn.esprit.rh',
                        nexusUrl: '192.168.33.10:8081',
                        nexusVersion: 'nexus3',
                        protocol: 'http',
                        repository: 'simpleapp-release',
                        version: 'pom.1.0'
                }
            }
			
			stage('Docker login') {

                                         steps {
                                          echo 'login to DockerHub'
                   	sh "docker login -u $DOCKERHUB_CREDENTIALS_USR -p $DOCKERHUB_CREDENTIALS_PSW"
                               }  }
			
	     stage('Build docker image'){
                             steps{
							 echo 'Build docker image'
                             
                                    sh "docker build -t $DOCKERHUB_CREDENTIALS_USR/springprojet ."
                             
                             }
                         }
	     
		 stage('Docker push image') {

                 steps {
                      echo 'Push DOcker Image'
                     	sh "docker push $DOCKERHUB_CREDENTIALS_USR/springprojet"
                        }  }
         
        }
}
